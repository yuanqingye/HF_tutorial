<div id="myDiv"></div>
<button type="button" onclick="loadXMLDoc()">Get my CD collection</button>

xmlhttp.onreadystatechange=function()
  {
  if (xmlhttp.readyState==4 && xmlhttp.status==200)
    {
    document.getElementById("myDiv").innerHTML=xmlhttp.responseText;
    }
  }

xmlhttp.open("GET","ajax_info.txt",false);
xmlhttp.send();
document.getElementById("myDiv").innerHTML=xmlhttp.responseText;(if not true)

setRequestHeader(header,value)	Adds HTTP headers to the request.
header: specifies the header name
value: specifies the header value
xmlhttp.open("POST","ajax_test.asp",true);
xmlhttp.setRequestHeader("Content-type","application/x-www-form-urlencoded");
xmlhttp.send("fname=Henry&lname=Ford");

To avoid cached file, add a unique ID to the URL:
xmlhttp.open("GET","demo_get.asp?t=" + Math.random(),true);

If you want to send information with the GET method, add the information to the URL:
Example
xmlhttp.open("GET","demo_get2.asp?fname=Henry&lname=Ford",true);
xmlhttp.send();

responseText	get the response data as a string
responseXML	get the response data as XML data

var xmlhttp;
function loadXMLDoc(url,cfunc){
xmlhttp=new XMLHttpRequest();
xmlhttp.onreadystatechange=cfunc;
xmlhttp.open("GET",url,true);
xmlhttp.send();
}
function myFunction()
{
loadXMLDoc("ajax_info.txt",function()
  {
  if (xmlhttp.readyState==4 && xmlhttp.status==200)
    {
    document.getElementById("myDiv").innerHTML=xmlhttp.responseText;
    }
  });
}

$.get(URL,data,function(data,status,xhr),dataType)
$.get("test.php", { 'colors[]' : ["Red","Green","Blue"] });

Name	                   Value/Description
async	             A Boolean value indicating whether the request should be handled asynchronous or not. Default is true
beforeSend(xhr)	     A function to run before the request is sent
cache	             A Boolean value indicating whether the browser should cache the requested pages. Default is true
complete(xhr,status) A function to run when the request is finished (after success and error functions).
contentType	     The content type used when sending data to the server. Default is: "application/x-www-form-urlencoded"
context	             Specifies the "this" value for all AJAX related callback functions
data	             Specifies data to be sent to the server
dataFilter(data,type)A function used to handle the raw response data of the XMLHttpRequest
dataType	     The data type expected of the server response.
error(xhr,status,    A function to run if the request fails.
error)	
global	             A Boolean value specifying whether or not to trigger global AJAX event handles for the request. Default is true
ifModified	     A Boolean value specifying whether a request is only successful if the response has changed since the last request. Default is: false.
jsonp	             A string overriding the callback function in a jsonp request
jsonpCallback	     Specifies a name for the callback function in a jsonp request
password	     Specifies a password to be used in an HTTP access authentication request.
processData	     A Boolean value specifying whether or not data sent with the request should be transformed into a query string. Default is true
scriptCharset	     Specifies the charset for the request
success(result,      A function to be run when the request succeeds
status,xhr)	
timeout	             The local timeout (in milliseconds) for the request
traditional	     A Boolean value specifying whether or not to use the traditional style of param serialization
type	             Specifies the type of request. (GET or POST)
url	             Specifies the URL to send the request to. Default is the current page
username	     Specifies a username to be used in an HTTP access authentication request
xhr	             A function used for creating the XMLHttpRequest object

$(selector).getJSON(url,data,success(data,status,xhr))

$.getJSON('ajax/test.json', function(data) {
  var items = [];
 
  $.each(data, function(key, val) {
    items.push('<li id="' + key + '">' + val + '</li>');
  });
 
  $('<ul/>', {
    'class': 'my-new-list',
    html: items.join('')
  }).appendTo('body');
});

$(document).ready(function(){
  $(document).ajaxStart(function(event){
    $("#wait").css("display","block");
    alert(event.currentTarget);
  });
  $(document).ajaxComplete(function(event){
    $("#wait").css("display","none");
    alert(event.result);
  });
  $("button").click(function(){
    $("#txt").load("demo_ajax_load.asp");
  });
});

$(document).ready(function(){
  $("button").click(function(){
    $.getScript("demo_ajax_script.js",function(result,status){
   $("p").html(result+" "+status);
});

function populatePatientInfo(){
    $.ajax({
        url: "/electronic/pm/patient_and_insurance_info.jsp?<%=ctx.getMemberString() %>",
        type: "GET",
        success: function(data, textStatus){
            $('div#PATIENT_INFO').html(data);
            $('div#PATIENT_INFO').show();			
        }
    });
}