/*
 * Copyright HealthFusion, Inc. 2014
 */
package com.hfc.data.db.claims.ccm;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import org.json.JSONException;
import org.json.JSONObject;
import com.google.gson.Gson;
import com.hfc.util.TextUtil;
/**
 * Wrapper for CHRONIC_CARE table
 *
 * @author Saswati Mishra
 * @since Dec 03, 2014
 */
public class ChronicCare {
    private Long chronicCareId;
    private Long memberId;
    private String chronicCondition;
    private Date permissionOnFile;
    private String recentActivity;
    private Date dateCreated;
    private Long claimId;
    private Date claimDateCreated;
    private Date fromDate;
    private Date toDate;
    private Long practiceId;
    private Long providerId;
    private ChronicCondition chronicCond;
    private String[] ICD9List;
    private String[] ICD10List;
    private String[] snomedList;
    // Convenience fields to map JOIN tables
    private String patientFirstName;
    private String patientLastName;
    private List<RecentActivity> activity;
    /**
     * <pre>
     * {
     *   "id": 12345,
     *   "type": 1,
     *   "patient_fname": "Mary",
     *   "patient_lname": "Jane",
     *   "cc": [
     *     {
     *       "icd9": ["250.0", "Diabetes"]
     *       "icd10": ["1234.555", "Diabetes Mellitus"]
     *       "snomed": ["127879797979797", "Good Diabetes"]
     *     },
     *     {
     *       "icd9": ["123.45", "Getting Old"]
     *       "icd10": ["12876.999", "Getting really old"]
     *       "snomed": ["989798787", "Getting really really old"]
     *     }
     *   ],
     *   "activity": [
     *     {
     *       "event": "Patient message received",
     *       "event_dt": "12/12/2014"
     *     },
     *     {
     *       "event": "Lab Ordered",
     *       "event_dt": "12/13/2014"
     *     }
     *   ],
     *   "last_ccm": "11/12/2015"
     * }
     * </pre>
     *
     * @author Rumpa
     *
     */
    private static class ChronicCareJSON {
        long id;
        int type;
        String patient_fname;
        String patient_lname;
        List<ChronicCondition> cc;
        List<ActivityJSON> activity;
    }
    private static class ActivityJSON {
        String event;
        String event_dt;
        public ActivityJSON(String _event, Date _event_dt) {
            event = _event;
            event_dt = TextUtil.format(_event_dt);
        }
    }
    private static class ChronicCondition {
        String[] icd9;
        String[] icd10;
        String[] snomed;
    }
    ChronicCareJSON toJSONObj(TypeEnum _type) {
        ChronicCareJSON ccjson = new ChronicCareJSON();
        ccjson.id = this.chronicCareId;
        ccjson.type = _type.ordinal() + 1;
        ccjson.patient_fname = this.patientFirstName;
        ccjson.patient_lname = this.patientLastName;
        ccjson.activity = new ArrayList<ChronicCare.ActivityJSON>();
        for (RecentActivity act : activity) {
            ccjson.activity.add(new ActivityJSON(act.getRecentActivity(), act
                    .getDateCreated()));
        }
        //TODO: Fill in the ChronicCondition logic
        return ccjson;
    }
    public JSONObject toJSON(TypeEnum _type) {
        try {
            ChronicCareJSON json = toJSONObj(_type);
            return new JSONObject(new Gson().toJson(json));
        } catch (JSONException ex) {
            return new JSONObject();
        }
    }
    public static enum TypeEnum {
        READY_TO_BILL, RECENTLY_BILLED, NO_RECENT_ACTIVITY, MEDICARE_FFS;
    }
    /**
     * @return the chronicCareId
     */
    public Long getChronicCareId() {
        return chronicCareId;
    }
    /**
     * @param chronicCareId
     *            the chronicCareId to set
     */
    public void setChronicCareId(Long chronicCareId) {
        this.chronicCareId = chronicCareId;
    }
    /**
     * @return the memberId
     */
    public Long getMemberId() {
        return memberId;
    }
    /**
     * @param memberId
     *            the memberId to set
     */
    public void setMemberId(Long memberId) {
        this.memberId = memberId;
    }
    /**
     * @return the chronicCondition
     */
    public String getChronicCondition() {
        return chronicCondition;
    }
    /**
     * @param chronicCondition
     *            the chronicCondition to set
     */
    public void setChronicCondition(String chronicCondition) {
        this.chronicCondition = chronicCondition;
    }
    /**
     * @return the permissionOnFile
     */
    public Date getPermissionOnFile() {
        return permissionOnFile;
    }
    /**
     * @param permissionOnFile
     *            the permissionOnFile to set
     */
    public void setPermissionOnFile(Date permissionOnFile) {
        this.permissionOnFile = permissionOnFile;
    }
    /**
     * @return the recentActivity
     */
    public String getRecentActivity() {
        return recentActivity;
    }
    /**
     * @param recentActivity
     *            the recentActivity to set
     */
    public void setRecentActivity(String recentActivity) {
        this.recentActivity = recentActivity;
    }
    /**
     * @return the dateCreated
     */
    public Date getDateCreated() {
        return dateCreated;
    }
    /**
     * @param dateCreated
     *            the dateCreated to set
     */
    public void setDateCreated(Date dateCreated) {
        this.dateCreated = dateCreated;
    }
    /**
     * @return the claimId
     */
    public Long getClaimId() {
        return claimId;
    }
    /**
     * @param claimId
     *            the claimId to set
     */
    public void setClaimId(Long claimId) {
        this.claimId = claimId;
    }
    /**
     * @return the claimDateCreated
     */
    public Date getClaimDateCreated() {
        return claimDateCreated;
    }
    /**
     * @param claimDateCreated
     *            the claimDateCreated to set
     */
    public void setClaimDateCreated(Date claimDateCreated) {
        this.claimDateCreated = claimDateCreated;
    }
    /**
     * @return the fromDate
     */
    public Date getFromDate() {
        return fromDate;
    }
    /**
     * @param fromDate
     *            the fromDate to set
     */
    public void setFromDate(Date fromDate) {
        this.fromDate = fromDate;
    }
    /**
     * @return the toDate
     */
    public Date getToDate() {
        return toDate;
    }
    /**
     * @param toDate
     *            the toDate to set
     */
    public void setToDate(Date toDate) {
        this.toDate = toDate;
    }
    /**
     * @return the practiceId
     */
    public Long getPracticeId() {
        return practiceId;
    }
    /**
     * @param practiceId
     *            the practiceId to set
     */
    public void setPracticeId(Long practiceId) {
        this.practiceId = practiceId;
    }
    /**
     * @return the providerId
     */
    public Long getProviderId() {
        return providerId;
    }
    /**
     * @param providerId
     *            the providerId to set
     */
    public void setProviderId(Long providerId) {
        this.providerId = providerId;
    }
    /**
     * @return the iCD9List
     */
    public String[] getICD9List() {
        return ICD9List;
    }
    /**
     * @return the iCD10List
     */
    public String[] getICD10List() {
        return ICD10List;
    }
    /**
     * @return the snomedList
     */
    public String[] getSnomedList() {
        return snomedList;
    }
}

Table Design
PRACTICE
Initially this column would be filled with 1 for few given taxonomy codes.
COLUMN NAME
DATE TYPE
INDEX
NOTES
HAS_CCM	NUMBER(1)	 	1 = Practice uses CCM Feature
Not needed anymore since the CCM_CONSENT_DATE would be adding the patient to the CHRONIC_CARE table.
POLICY_INFO
Why: Save the consent capture date. Once the consent is captured, we do need to store when did they say no and who said no.
COLUMN NAME
DATA TYPE
INDEX
NOTES
CCM_CONSENT_DATE	DATE	YES	Capture the date when the CCM consent was marked "Yes"
MODIFIED_BY_USERID	NUMBER(12)	 	
Foreign key to REAL_TIME_USERS table
User ID who marked CCM = Yes
Every time some one makes a change in MEMBER_POLICY_XREF, audit the table.
PROVIDER_ID	NUMBER(12)	YES	FKEY TO PROVIDER
UI Check box is checked if CCM_CONSENT_DATE IS NOT NULL.
When the CCM Consent is marked "No" - wipe out CCM_CONSENT_DATE.
How do we determine when was it marked No - look into the AUDIT_POLICY_INFO.
Trigger:
Populate the AUDIT_POLICY_INFO table
Populate the PRACTICE.HAS_CCM column.
When the CCM_CONSENT_DATE is filled - run through CCM_ELIGBILITY and insert row in CHRONIC_CARE
 
AUDIT_POLICY_INFO
Why: Save the consent capture date. Once the consent is captured, we do need to store when did they say no and who said no.
COLUMN NAME
DATA TYPE
INDEX
NOTES
AUDIT_POLICY_INFO_ID
NUMBER(12)	PKEY	 
POLICY_INFO_ID	NUMBER(12)	 	 
CCM_CONSENT_DATE	DATE	YES	Capture the date when the CCM consent was marked "Yes"
MODIFIED_BY_USERID	NUMBER(12)	 	
Foreign key to REAL_TIME_USERS table
User ID who marked CCM = Yes
Every time some one makes a change in MEMBER_POLICY_XREF, audit the table.
PROVIDER_ID	NUMBER(12)	YES	FKEY TO PROVIDER
DATE_CREATED	DATE	 	 
RECENT_ACTIVITY
COLUMN NAME
COLUMN TYPE
INDEX
NOTES
PKEY	NUMBER(12)	 	 
MEMBER_ID	NUMBER(12)	 	 
RECENT_ACTIVITY	VARCHAR(4000)	 	MEDICATION ORDERED LIPITOR - 400MG
SOAP_AREA	NUMBER(12)	 	MEDICATION, PROBLEM_LIST, ALLERGY ETC.
DATE_CREATED	DATE	 	 
CHRONIC_CARE_PKEY	NUMBER(12)	 	FOREIGN KEY TO CHRONIC CARE - WILL BE PRESENT IF NO CLAIM IS CREATED YET.
Recent Activity will be tied to the CCM_ID.
Select CCM_ID from CMM where recent_activity_date_created between CCM_FROM_DATE and CCM_TO_DATE and CLAIMID IS NULL and MEMBER_ID = ?
Events to capture the Recent Activity
Table Name
Event
SOAP_AREA
Label Creation
Notes
PATIENT_RXS	INSERT	6	Medication Ordered : [ Medication_list.drug_name ]	join condition to pull Name : patient_rxs.medication_id = medication_list.medication_id
PATIENT_RENEWALS 	UPDATE	6	Medication Refill:[ Medication_list.drug_name ]	
Upon RENEWAL_STATUS = 0 (Ok)
join condition to pull Name : patient_rxs.medication_id = medication_list.medication_id
MEDICATION_LIST	INSERT, UPDATE, DELETE	6	Medication edited: [ Medication_list.drug_name ]	For all records who do not have child record in PATIENT_RXS and PATIENT_RENEWALS 
TEST_ORDER 	INSERT	 	Ordered : [ Lab, Radiology, Consult, Office ] + date ordered	
TEST_ORDER.ORDER_TYPE Values and mapping :
ORDER_TYPE
LABEL
NULL	Lab
5	Consult
6	In Office Lab
7	Radiology
ORDER_RESULT	INSERT	 	Order Resulted - [Date]	ORDER_RESULT.DATE_CREATED
ORDER_RESULT	UPDATE	 	Result Reviewed -[ Date]	ORDER_RESULT.REVIEWED_DATE not null event.
EHR_ALLERGY_HISTORY	INSERT	2	Allergy Added - [ehr_allergy_history.allergy_name]	 
EHR_ALLERGY_HISTORY	UPDATE	2	Allergy Updated - [ehr_allergy_history.allergy_name]	 
PROBLEM_LIST	INSERT	25	
Condition Added -
[problem_list.description]
 
PROBLEM_LIST	UPDATE	25	
Condition Updated -
[problem_list.description]
 
EHR_MESSAGES	INSERT	40	Patient message sent	
Ask Karina Serrano (HealthFusion) if correct assumption for EHR_MESSAGES and EHR_MESSAGES_RECEIVER tables.
First time the staff is sending a message to the patient.
EHR_MESSAGE.SENDER_ID NOT NULL AND MEMBER_ID NOT NULL
EHR_MESSAGES	INSERT	40	Staff message received from patient	EHR_MESSAGE.MEMBER_SENDER_ID IS NOT NULL or EHR_MESSAGE.PPUSER_SENDER_ID IS NOT NULL
 EHR_MESSAGES_RECEIVER	 INSERT	40 	Patient message received	
EHR_MESSAGES_RECEIVER.PPUSER_RECEIVER_ID IS NOT NULL or
EHR_MESSAGES.MEMBER_RECEIVER_ID IS NOT NULL
ENCOUNTER	INSERT	29	Phone encounter documented	ENCOUNTER.TYPE = 1
CCDA Import TBD	 	 	 	 
 
CHRONIC_CARE
Column Name
Column Type
INDEX
Notes
PKEY	NUMBER(12)	 	 
MEMBER_ID	NUMBER(12)	YES	FKEY TO MEMBER
CHRONIC_CONDITION	
CLOB
VARCHAR2(4000)
 	
Format for keeping ICD9, ICD10, Snomed Code
ICD9_1^ICD10_1^SNOMED_1,ICD9_2^ICD10_2^SNOMED_2
SAMPLE: 6929^L259^182782007,71941^M25519^267949000,71941^^267949000,71951^M25619^249918006
PERMISSION_ON_FILE	DATE	 	INDICATES WHETHER THE PROVIDER HAD GATHERED PATIENT CONSENT
RECENT_ACTIVITY	CLOB	 	 
CLAIM_ID	NUMBER(12)	YES	FKEY TO CLAIMS TABLE
CLAIM_DATE_CREATED	DATE	 	 
STATUS	NUMBER(12)	 	CONSENT_ON_FILE, HAS_TWO_CONDITION, HAS_NO_CCM_LAST_30_DAYS, READY_TO_BILL, BILLED
PRACTICE_ID	NUMBER(12)	YES	 
DATE_CREATED	 	YES	 
FROM_DATE	DATE	 	Patient Consent Date at the begining. After the first CCM claim of the patient, next date would be last CCM toDate + 1
TO_DATE	DATE	 	Always FROM_DATE + 30
PROVIDER_ID	NUMBER(12)	YES	FKEY TO PROVIDER
As soon as the Consent arrives - add an entry into the CHRONIC_CARE table with FROM_DATE = CCM CONSENT date, TO_DATE = FROM_DATE + 30 - use UI to populate this row.
The Recent Activity, capture only for members with consent on file. The trigger may check CCM_ELIGIBILITY table to establish should we collect the recent activity.
New records for the member after the first CCM entry -
the Nightly oracle job will establish a new entry after running through the CCM_ELIGIBILITY

Ready to Bill: Chronic_care records with - Recent Activity with no claim ID 
Recently Billed: ClaimID not null and CLAIM_DATE_CREATED < sysdate - 30
No Recent Activity: Recent Activity is null and today between from_date and to_date
Table Questions:
The RECENT_ACTIVITY column is present in both the above mentioned tables. Are these two columns related to each other in any way?
Recent Activity aggregated for a certain time period - all RECENT ACTIVITY BETWEEN FROM_DATE and TO_DATE, will be present in the CHRONIC_CARE table.
The RECENT_ACTIVITY column present in RECENT_ACTIVITY table is of type varchar2(4000). Why is it not present as a CLOB?
The single event label will be generally less than 4000 characters, but since CHRONIC_CARE table we have gathered all the recent activity across the time, it may or may not fit into VARCHAR(4000) hence the choice of CLOB.
The column SOAP_AREA in table RECENT_ACTIVITY is unclear. What data would it capture exactly. As it is a NUMBER datatype would that mean that it will store id of something?
This will store EvaluationEntryTypeEnum ordinal value.
Recent Activity will be tied to the CCM_ID. Select CCM_ID from CMM where recent_activity_date_created between CCM_FROM_DATE and CCM_TO_DATE and CLAIMID IS NULL and MEMBER_ID = ? Will it always return single record ? What happens if it returns more than one rows?
Yes within a given FROM_DATE and TO_DATE there will be only one CHRONIC_CARE record, hence only one CCM_ID is found.

Requirements - Phase I
#
Title
User Story
Notes
1	
Do not display CCM Billing button to customers who do not have both EHR and PM plans.
CD-475 - Display CCM Button under "Reports" NEW
 	
In order for this feature to work, the practice must have EHR and PM both. Since recent activity belongs to EHR and CCM Claim will be created in PM.
 
2	
Patient must have insurance profile payer class "Medicare FFS" to be considered for the list.
CD-486 - CCM Package PL/SQL NEW
 	Payer name does not influence any thing. If the practice marks the Aetna insurance profile with "Medicare FFS" as payer class - that will also show the CCM consent row.
3	
Patient must have consent on file tied to a specific provider.
CD-486 - CCM Package PL/SQL NEW
Medicare gives permission to a specific provider for a specific patient	
 
4	
Capture the consent date for the patient by the provider
CD-474 - Policy Info UI - capture CCM_CONSENT on file. NEW
 	 
4a	If the insurance profile is archived then the CCM entry should be removed.	 	 
5	
Upon update of insurance profile, do not update the consent date if already present.
CD-479 - Consent marked = Yes - Save Consent on File, during an update, do not override the consent on File. NEW
 	 
6	
Capture the date when the user unchecks the box.
CD-468 - AUDIT_POLICY_INFO NEW
 	 
7	
On the day of evaluation to create the ready to bill the patient being evaluated must have 2 chronic active condition in the problem list. The onset date of the condition is not questioned.
CD-486 - CCM Package PL/SQL NEW
 	Patient can acquire the condition on the day of evaluation. The engine will look only at the 2 or more active chronic condition present or not.
 	Recent = sysdate - 60	 	 
8	
Recent Activity should be captured after the patient consent date.
CD-486 - CCM Package PL/SQL NEW
 	 
9	
Recent Activity Event - Any event as specified in CCM_ACTIVITY.
Any qualifying event without the ENCOUNTER_ID.
If Encounter Id is present, it belongs to Phone Encounter
For first claim - all recent activity after consent date are eligible.
For following claim - all activity after the last CCM claim are eligible until the next claim is created.
CD-487 - Capture Recent Activity after the patient consent on file arrives. NEW
 	 
10	
UI Provider drop down - The label is "Consent Provider", list is all rendering provider sorted alphabetically
CD-488 - CCM UI NEW
 	 
11	
If the user is context is a provider, pre-select that provider in the drop down.
CD-488 - CCM UI NEW
 	 
12	
Ready To Bill, Billed Recently, No Recent Activity - all displays patient for whom patient consent is in file. So do not display "Permission on File" column.
CD-488 - CCM UI NEW
 	
Question:
Sort order on the page - patient alphabetically A ~ Z?
Arnold Mentze (HealthFusion) Yes, order by LAST ASC, FIRST ASC
13	
Display the ICD9 and snomed code in the first 3 tabs.
Problem List ICd9, ICD10, Snomed
CD-488 - CCM UI NEW CD-476 - JSON Structure representing the CCM UI. NEW
So it helps the user fix it for claims without ICD9	 
14	
FFS Medicare All Patient - Can display patient without permission on file.
CD-488 - CCM UI NEW
 	 
15	
Last Claim - indicates the date of last CCM Claim. It does not include the regular claim created outside the CCM interface having CPT : CPT 99495-99496, 90951-90970, or HCPCS G0181-G0182 
 CD-471 - PL/SQL to aggregate the data for CHRONIC_CARE NEW
 	 
16	
Ready To Bill
No regular claim with CPT 99495-99496, 90951-90970, or HCPCS G0181-G0182 between today - 30
If no prior CCM claim exists :
Recent Activity after the patient consent date.
DOS
FromDate = Patient Consent
toDate = Most recent Activity
CCM Date = ToDate
If prior CCM claim exists:
CCM DOS = fromDate = Last CCM + (N-1)*30, toDate = fromDate + 30
CCM Date = toDate
last CCM claim was before today - 30
And recent activity also within today - 30
Last 90 day worth of prospective claim lines are displayed.
CD-471 - PL/SQL to aggregate the data for CHRONIC_CARE NEW CD-480 - ChronicCareMgmt Filter for "Ready To Bill" NEW CD-486 - CCM Package PL/SQL NEW
 
 
 
 Assume patient is medicare FFS, patient consent is present and has 2 active chronic conditions on file.
 
17	
Add the start date of service and end date of service on the UI - now that we are displaying
CD-488 - CCM UI NEW
 	 
18	
Billed Recently
Display all CCM claims created within today - 30
Does not include claims created outside the CCM interface with the CCM code or CPT 99495-99496, 90951-90970, or HCPCS G0181-G0182 
 CD-486 - CCM Package PL/SQL NEW CD-481 - ChronicCareMgmt Filter for "Recently Billed" NEW
 	  Assume patient is medicare FFS, patient consent is present and has 2 active chronic conditions on file.
19	
No Recent Activity
No regular claim with CPT 99495-99496, 90951-90970, or HCPCS G0181-G0182 between today - 30


Similar to "ready to bill" - display only the records with no recent activity - where the date range is
start date = Last CCM Date + (N-1)* 30
end date = start date + 30
Recent Activity is absent after the last CCM claim which was greater than 30 days from today.
 CD-482 - ChronicCareMgmt Filter for "No Recent Activity" NEW

 Money slipping away, just say hello and get $40!
 
  Assume patient is medicare FFS, patient consent is present and has 2 active chronic conditions on file.
Question:
Should we place an exclamation mark on the button?
Since we are calculating a day in advance, placing a warning sign if they have more than 10 patient in that list - indicates provider is about to lose 400$ if not pursued.
Answer:
Since there will be always patients with no recent activity, not necessary

20	
FFS Medicare All Patients
Filter patients with ""Medicare FFS" payer class in active insurance profile
CD-483 - ChronicCareMgmt Filter for "Medicare FFS" NEW
Patient Consent is irrelevant for the search. Provides the doctor with a scope of pursuing consent from the patient so they can start billing.	
Question:
Any category display - "With Consent" and "Without Consent"
Answer:
Adding a filter so take out the "Permission on File" column.
21	
Every Monday Message "Rendering Provider" with reminder to review CCM if they have records in "Ready to Bill" or "No Recent Activity" tab.
CD-484 - Message the provider every Monday - if they have "Ready To Bill" available NEW
 	 
22	
Recent Activity Labels TBD
CD-487 - Capture Recent Activity after the patient consent on file arrives. NEW
 	 
23	
Generate User Hold Claim for each checked box on "Ready to Bill"
Falls through the
Pick the patient chronic condition ICDs as diagnosis
Stick the known CPT Code - 99490
The diagnosis pointer will be all the ICDs added.
DOS from, To
Use the provider chosen for the UI Filter as the rendering provider
Default billing provider for the chosen rendering provider is claim billing provider.
Pick the medicare ffs payer with the CCM permission on file.
If there is a another payer who is not "medicare ffs" pick that payer for the COB payer.
Chronic condition may be snomed - most snomed has icd-9 map so we should be able to pick it.
If unable to pick the ICD9, we create the user hold claim without the ICD9 codes
CD-472 - Generate CCM Claim for one claim. NEW
 	
 You can create a user hold claim with out the ICD9
24	Practice must choose to do CCM and hence crunching only their member	 	
At present there are 213 practices and 40K patients for those practices who have a "Medicare FFS" profile and 2 chronic and active condition. Based on our current projected design - it will cause a lot of redo log with constant insert and delete of "Ready to Bill" patients. To limit that, we will gather patients for practice who are interested.
Side effect of the above providers must be enrolled In jan if they do not want to bill. Note: recent activity won't be captured for practice who did not enroll. And that will affect the data mining.
All the practices who have primary care, automatically turn on.
Not an issue any more only the CCM Consent patient are considered for evaluation.
25	
Recent Activity - Display the disclosure of 20 min visit
CD-488 - CCM UI NEW
 	Arnold Mentze (HealthFusion) Disclaimer will only be displayed on the Ready to Bill tab, that's the only place where it's relevant.
26	Taxonomy - primary care, internal medicine - get the feature automatically the feature is turned on.	 	No longer needed, since the first consent drives the record collection of the practice patient.
27	For practices who does not have it turned on, with the very first consent turn the feature on for the practice.	 	 
28	If ccm consent capture date is in 2014, set the CHRONIC_CARE.FROM_DATE = 1/1/2015	 	 
Requirements - Phase II
 
#
Title
User Story
Notes
1	Create a new document type "CCM Consent"	 When the user scans the document and uploads it, we check the box, and pick the associated rendering provider.	 
2	Possibility - $ sign on CCM Billing if has one ready to bill claim.	 	 
3	The consent provider list - displays only providers who has at least one consent on file.	 	 
4	
Warn the user if they use 99490 during EHR> P ---> Procedure Code.
They can use it on the PM side.
 	 
5	Admin feature flag for practices to turn on/off the CCM feature availability to the practice.	 	Currently we will use the taxonomy to mark the most probable practices who might use the CCM feature. Later on, we will expose the feature flag to the customer.
6	Claim ID - link to claim status?

-- PMS = 22
-- EHR = 25
drop table EHR_PMS_PRACTICE;
create table EHR_PMS_PRACTICE
as 
select distinct practice_id from plan_order where
plan_id =22
intersect
select distinct practice_id from plan_order where
plan_id =25	 	 